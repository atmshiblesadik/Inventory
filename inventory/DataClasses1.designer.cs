#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace inventory
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTotalammountpanel(Totalammountpanel instance);
    partial void UpdateTotalammountpanel(Totalammountpanel instance);
    partial void DeleteTotalammountpanel(Totalammountpanel instance);
    partial void InsertLoginTable(LoginTable instance);
    partial void UpdateLoginTable(LoginTable instance);
    partial void DeleteLoginTable(LoginTable instance);
    partial void InsertMultiple_order(Multiple_order instance);
    partial void UpdateMultiple_order(Multiple_order instance);
    partial void DeleteMultiple_order(Multiple_order instance);
    partial void InsertDaily_sell(Daily_sell instance);
    partial void UpdateDaily_sell(Daily_sell instance);
    partial void DeleteDaily_sell(Daily_sell instance);
    partial void InsertDaily_consumption(Daily_consumption instance);
    partial void UpdateDaily_consumption(Daily_consumption instance);
    partial void DeleteDaily_consumption(Daily_consumption instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::inventory.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Totalammountpanel> Totalammountpanels
		{
			get
			{
				return this.GetTable<Totalammountpanel>();
			}
		}
		
		public System.Data.Linq.Table<LoginTable> LoginTables
		{
			get
			{
				return this.GetTable<LoginTable>();
			}
		}
		
		public System.Data.Linq.Table<Multiple_order> Multiple_orders
		{
			get
			{
				return this.GetTable<Multiple_order>();
			}
		}
		
		public System.Data.Linq.Table<Daily_sell> Daily_sells
		{
			get
			{
				return this.GetTable<Daily_sell>();
			}
		}
		
		public System.Data.Linq.Table<Daily_consumption> Daily_consumptions
		{
			get
			{
				return this.GetTable<Daily_consumption>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Totalammountpanel")]
	public partial class Totalammountpanel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial_No;
		
		private int _Total_consumption;
		
		private int _Total_sell;
		
		private int _Benifit;
		
		private int _Loss;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_NoChanging(int value);
    partial void OnSerial_NoChanged();
    partial void OnTotal_consumptionChanging(int value);
    partial void OnTotal_consumptionChanged();
    partial void OnTotal_sellChanging(int value);
    partial void OnTotal_sellChanged();
    partial void OnBenifitChanging(int value);
    partial void OnBenifitChanged();
    partial void OnLossChanging(int value);
    partial void OnLossChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Totalammountpanel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_No
		{
			get
			{
				return this._Serial_No;
			}
			set
			{
				if ((this._Serial_No != value))
				{
					this.OnSerial_NoChanging(value);
					this.SendPropertyChanging();
					this._Serial_No = value;
					this.SendPropertyChanged("Serial_No");
					this.OnSerial_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_consumption", DbType="Int NOT NULL")]
		public int Total_consumption
		{
			get
			{
				return this._Total_consumption;
			}
			set
			{
				if ((this._Total_consumption != value))
				{
					this.OnTotal_consumptionChanging(value);
					this.SendPropertyChanging();
					this._Total_consumption = value;
					this.SendPropertyChanged("Total_consumption");
					this.OnTotal_consumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_sell", DbType="Int NOT NULL")]
		public int Total_sell
		{
			get
			{
				return this._Total_sell;
			}
			set
			{
				if ((this._Total_sell != value))
				{
					this.OnTotal_sellChanging(value);
					this.SendPropertyChanging();
					this._Total_sell = value;
					this.SendPropertyChanged("Total_sell");
					this.OnTotal_sellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Benifit", DbType="Int NOT NULL")]
		public int Benifit
		{
			get
			{
				return this._Benifit;
			}
			set
			{
				if ((this._Benifit != value))
				{
					this.OnBenifitChanging(value);
					this.SendPropertyChanging();
					this._Benifit = value;
					this.SendPropertyChanged("Benifit");
					this.OnBenifitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loss", DbType="Int NOT NULL")]
		public int Loss
		{
			get
			{
				return this._Loss;
			}
			set
			{
				if ((this._Loss != value))
				{
					this.OnLossChanging(value);
					this.SendPropertyChanging();
					this._Loss = value;
					this.SendPropertyChanged("Loss");
					this.OnLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginTable")]
	public partial class LoginTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public LoginTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Multiple_order")]
	public partial class Multiple_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Order_no;
		
		private int _Ammount;
		
		private string _Description;
		
		private int _Advanced;
		
		private int _Due;
		
		private string _Mobile;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrder_noChanging(string value);
    partial void OnOrder_noChanged();
    partial void OnAmmountChanging(int value);
    partial void OnAmmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAdvancedChanging(int value);
    partial void OnAdvancedChanged();
    partial void OnDueChanging(int value);
    partial void OnDueChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public Multiple_order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_no", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Order_no
		{
			get
			{
				return this._Order_no;
			}
			set
			{
				if ((this._Order_no != value))
				{
					this.OnOrder_noChanging(value);
					this.SendPropertyChanging();
					this._Order_no = value;
					this.SendPropertyChanged("Order_no");
					this.OnOrder_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ammount", DbType="Int NOT NULL")]
		public int Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this.OnAmmountChanging(value);
					this.SendPropertyChanging();
					this._Ammount = value;
					this.SendPropertyChanged("Ammount");
					this.OnAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advanced", DbType="Int NOT NULL")]
		public int Advanced
		{
			get
			{
				return this._Advanced;
			}
			set
			{
				if ((this._Advanced != value))
				{
					this.OnAdvancedChanging(value);
					this.SendPropertyChanging();
					this._Advanced = value;
					this.SendPropertyChanged("Advanced");
					this.OnAdvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Int NOT NULL")]
		public int Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Daily_sell")]
	public partial class Daily_sell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Receipt_no;
		
		private string _Type;
		
		private int _Ammount;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceipt_noChanging(string value);
    partial void OnReceipt_noChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmmountChanging(int value);
    partial void OnAmmountChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public Daily_sell()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receipt_no", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Receipt_no
		{
			get
			{
				return this._Receipt_no;
			}
			set
			{
				if ((this._Receipt_no != value))
				{
					this.OnReceipt_noChanging(value);
					this.SendPropertyChanging();
					this._Receipt_no = value;
					this.SendPropertyChanged("Receipt_no");
					this.OnReceipt_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ammount", DbType="Int NOT NULL")]
		public int Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this.OnAmmountChanging(value);
					this.SendPropertyChanging();
					this._Ammount = value;
					this.SendPropertyChanged("Ammount");
					this.OnAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Daily_consumption")]
	public partial class Daily_consumption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Description;
		
		private int _Ammount;
		
		private System.DateTime _Dates;
		
		private int _Serial_No;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmmountChanging(int value);
    partial void OnAmmountChanged();
    partial void OnDatesChanging(System.DateTime value);
    partial void OnDatesChanged();
    partial void OnSerial_NoChanging(int value);
    partial void OnSerial_NoChanged();
    #endregion
		
		public Daily_consumption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ammount", DbType="Int NOT NULL")]
		public int Ammount
		{
			get
			{
				return this._Ammount;
			}
			set
			{
				if ((this._Ammount != value))
				{
					this.OnAmmountChanging(value);
					this.SendPropertyChanging();
					this._Ammount = value;
					this.SendPropertyChanged("Ammount");
					this.OnAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dates", DbType="Date NOT NULL")]
		public System.DateTime Dates
		{
			get
			{
				return this._Dates;
			}
			set
			{
				if ((this._Dates != value))
				{
					this.OnDatesChanging(value);
					this.SendPropertyChanging();
					this._Dates = value;
					this.SendPropertyChanged("Dates");
					this.OnDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_No
		{
			get
			{
				return this._Serial_No;
			}
			set
			{
				if ((this._Serial_No != value))
				{
					this.OnSerial_NoChanging(value);
					this.SendPropertyChanging();
					this._Serial_No = value;
					this.SendPropertyChanged("Serial_No");
					this.OnSerial_NoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emp_id;
		
		private string _Emp_name;
		
		private string _Emp_phone;
		
		private double _Emp_salary;
		
		private double _Emp_deduction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmp_idChanging(int value);
    partial void OnEmp_idChanged();
    partial void OnEmp_nameChanging(string value);
    partial void OnEmp_nameChanged();
    partial void OnEmp_phoneChanging(string value);
    partial void OnEmp_phoneChanged();
    partial void OnEmp_salaryChanging(double value);
    partial void OnEmp_salaryChanged();
    partial void OnEmp_deductionChanging(double value);
    partial void OnEmp_deductionChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Emp_id
		{
			get
			{
				return this._Emp_id;
			}
			set
			{
				if ((this._Emp_id != value))
				{
					this.OnEmp_idChanging(value);
					this.SendPropertyChanging();
					this._Emp_id = value;
					this.SendPropertyChanged("Emp_id");
					this.OnEmp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_name
		{
			get
			{
				return this._Emp_name;
			}
			set
			{
				if ((this._Emp_name != value))
				{
					this.OnEmp_nameChanging(value);
					this.SendPropertyChanging();
					this._Emp_name = value;
					this.SendPropertyChanged("Emp_name");
					this.OnEmp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Emp_phone
		{
			get
			{
				return this._Emp_phone;
			}
			set
			{
				if ((this._Emp_phone != value))
				{
					this.OnEmp_phoneChanging(value);
					this.SendPropertyChanging();
					this._Emp_phone = value;
					this.SendPropertyChanged("Emp_phone");
					this.OnEmp_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_salary", DbType="Float NOT NULL")]
		public double Emp_salary
		{
			get
			{
				return this._Emp_salary;
			}
			set
			{
				if ((this._Emp_salary != value))
				{
					this.OnEmp_salaryChanging(value);
					this.SendPropertyChanging();
					this._Emp_salary = value;
					this.SendPropertyChanged("Emp_salary");
					this.OnEmp_salaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_deduction", DbType="Float NOT NULL")]
		public double Emp_deduction
		{
			get
			{
				return this._Emp_deduction;
			}
			set
			{
				if ((this._Emp_deduction != value))
				{
					this.OnEmp_deductionChanging(value);
					this.SendPropertyChanging();
					this._Emp_deduction = value;
					this.SendPropertyChanged("Emp_deduction");
					this.OnEmp_deductionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
